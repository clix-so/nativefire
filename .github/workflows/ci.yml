name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.21']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -short -race -coverprofile=coverage.txt -covermode=atomic -v ./...

      - name: Run linter (Linux only)
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        run: |
          echo "Running basic linter checks..."
          gofmt -l . > /tmp/fmt_check || true
          if [ -s /tmp/fmt_check ]; then
            echo "❌ The following files are not properly formatted:"
            cat /tmp/fmt_check
            echo "Run: gofmt -w ."
            exit 1
          fi
          echo "✅ Code formatting looks good!"
          go vet ./...
          echo "✅ Go vet passed!"

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt

  npm-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Test npm scripts
        run: |
          echo "Testing package.json scripts..."
          npm run test

